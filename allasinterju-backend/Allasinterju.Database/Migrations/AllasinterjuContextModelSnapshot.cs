// <auto-generated />
using System;
using Allasinterju.Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Allasinterju.Database.Migrations
{
    [DbContext(typeof(AllasinterjuContext))]
    partial class AllasinterjuContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Allasinterju.Database.Models.Ajanla", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Allasid")
                        .HasColumnType("int")
                        .HasColumnName("allasid");

                    b.Property<int>("Allaskeresoid")
                        .HasColumnType("int")
                        .HasColumnName("allaskeresoid");

                    b.Property<bool>("Jelentkezve")
                        .HasColumnType("bit")
                        .HasColumnName("jelentkezve");

                    b.HasKey("Id");

                    b.HasIndex("Allasid");

                    b.HasIndex("Allaskeresoid");

                    b.ToTable("ajanlas", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algorithm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category");

                    b.Property<string>("Difficulty")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("difficulty");

                    b.Property<string>("Inputformat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inputformat");

                    b.Property<int>("Kerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kerdoivid");

                    b.Property<int?>("Memory")
                        .HasColumnType("int")
                        .HasColumnName("memory");

                    b.Property<string>("Outputformat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("outputformat");

                    b.Property<string>("Problemdesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("problemdesc");

                    b.Property<string>("Samplesolution")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("samplesolution");

                    b.Property<string>("Spacecomplexity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("spacecomplexity");

                    b.Property<string>("Timecomplexity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("timecomplexity");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Kerdoivid");

                    b.ToTable("algorithm", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algorithmconstraint", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Algorithmid")
                        .HasColumnType("int")
                        .HasColumnName("algorithmid");

                    b.Property<string>("Constraint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("constraint");

                    b.HasKey("Id");

                    b.HasIndex("Algorithmid");

                    b.ToTable("algorithmconstraint", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algorithmexample", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Algorithmid")
                        .HasColumnType("int")
                        .HasColumnName("algorithmid");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("explanation");

                    b.Property<string>("Input")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("input");

                    b.Property<string>("Output")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("output");

                    b.HasKey("Id");

                    b.HasIndex("Algorithmid");

                    b.ToTable("algorithmexample", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algorithmhint", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Algorithmid")
                        .HasColumnType("int")
                        .HasColumnName("algorithmid");

                    b.Property<string>("Hint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hint");

                    b.HasKey("Id");

                    b.HasIndex("Algorithmid");

                    b.ToTable("algorithmhint", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algortihmtestcase", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Algorithmid")
                        .HasColumnType("int")
                        .HasColumnName("algorithmid");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit")
                        .HasColumnName("hidden");

                    b.Property<string>("Input")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("input");

                    b.Property<string>("Output")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("output");

                    b.Property<int?>("Points")
                        .HasColumnType("int")
                        .HasColumnName("points");

                    b.HasKey("Id");

                    b.HasIndex("Algorithmid");

                    b.ToTable("algortihmtestcase", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Alla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cegid")
                        .HasColumnType("int")
                        .HasColumnName("cegid");

                    b.Property<string>("Cim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cim");

                    b.Property<DateTime?>("Hatarido")
                        .HasColumnType("datetime")
                        .HasColumnName("hatarido");

                    b.Property<TimeOnly?>("Kitoltesido")
                        .HasColumnType("time")
                        .HasColumnName("kitoltesido");

                    b.Property<string>("Leiras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("leiras");

                    b.Property<string>("Munkakor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("munkakor");

                    b.Property<string>("Munkarend")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("munkarend");

                    b.Property<string>("Rovidleiras")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rovidleiras");

                    b.Property<string>("Telephelyszoveg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telephelyszoveg");

                    b.HasKey("Id");

                    b.HasIndex("Cegid");

                    b.ToTable("allas", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Allaskapcsolattarto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Allasid")
                        .HasColumnType("int")
                        .HasColumnName("allasid");

                    b.Property<int>("Kapcsolattartoid")
                        .HasColumnType("int")
                        .HasColumnName("kapcsolattartoid");

                    b.HasKey("Id");

                    b.HasIndex("Allasid");

                    b.HasIndex("Kapcsolattartoid");

                    b.ToTable("allaskapcsolattarto", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Allaskerdoiv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kerdesid")
                        .HasColumnType("int")
                        .HasColumnName("kerdesid");

                    b.Property<int>("Kerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kerdoivid");

                    b.Property<int?>("Sorszam")
                        .HasColumnType("int")
                        .HasColumnName("sorszam");

                    b.HasKey("Id")
                        .HasName("PK_allaskerdes");

                    b.HasIndex("Kerdesid");

                    b.HasIndex("Kerdoivid");

                    b.ToTable("allaskerdoiv", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Allaskompetencium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Allasid")
                        .HasColumnType("int")
                        .HasColumnName("allasid");

                    b.Property<int>("Kompetenciaid")
                        .HasColumnType("int")
                        .HasColumnName("kompetenciaid");

                    b.Property<string>("Szint")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("szint");

                    b.HasKey("Id");

                    b.HasIndex("Allasid");

                    b.HasIndex("Kompetenciaid");

                    b.ToTable("allaskompetencia", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Allasvizsgalo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Allasid")
                        .HasColumnType("int")
                        .HasColumnName("allasid");

                    b.Property<int>("Felhasznaloid")
                        .HasColumnType("int")
                        .HasColumnName("felhasznaloid");

                    b.HasKey("Id");

                    b.HasIndex("Allasid");

                    b.HasIndex("Felhasznaloid");

                    b.ToTable("allasvizsgalo", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Ceg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cegnev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cegnev");

                    b.Property<string>("Cegtipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cegtipus");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Jelszo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("jelszo");

                    b.Property<string>("Kapcsolattarto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kapcsolattarto");

                    b.Property<string>("Kapcsolattartonev")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kapcsolattartonev");

                    b.Property<byte[]>("Kep")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("kep");

                    b.Property<string>("Leiras")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("leiras");

                    b.Property<string>("Levelezesicim")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("levelezesicim");

                    b.Property<string>("Mobiltelefon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mobiltelefon");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefon");

                    b.Property<string>("Telephely")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telephely");

                    b.HasKey("Id");

                    b.ToTable("ceg", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Cegtelephely", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Cegid")
                        .HasColumnType("int")
                        .HasColumnName("cegid");

                    b.Property<string>("Cimszoveg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cimszoveg");

                    b.Property<string>("Irsz")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("irsz");

                    b.Property<string>("Telepules")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telepules");

                    b.Property<string>("Utcahazszam")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("utcahazszam");

                    b.HasKey("Id");

                    b.ToTable("cegtelephely", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Design", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category");

                    b.Property<string>("Deliverables")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("deliverables");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Kerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kerdoivid");

                    b.Property<string>("Styleguide")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("styleguide");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Kerdoivid");

                    b.ToTable("design", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Designevaluation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Designid")
                        .HasColumnType("int")
                        .HasColumnName("designid");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("Designid");

                    b.ToTable("designevaluation", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Designreference", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Designid")
                        .HasColumnType("int")
                        .HasColumnName("designid");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex("Designid");

                    b.ToTable("designreference", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Designreq", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Designid")
                        .HasColumnType("int")
                        .HasColumnName("designid");

                    b.HasKey("Id");

                    b.HasIndex("Designid");

                    b.ToTable("designreq", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accessrequirements")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("accessrequirements");

                    b.Property<string>("Architecturedesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("architecturedesc");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category");

                    b.Property<string>("Difficulty")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("difficulty");

                    b.Property<string>("Docformat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("docformat");

                    b.Property<bool?>("Docrequired")
                        .HasColumnType("bit")
                        .HasColumnName("docrequired");

                    b.Property<string>("Infraconstraints")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("infraconstraints");

                    b.Property<int>("Kerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kerdoivid");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("platform");

                    b.Property<string>("Resourcelimits")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resourcelimits");

                    b.Property<string>("Systemrequirements")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("systemrequirements");

                    b.Property<string>("Taskdescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("taskdescription");

                    b.Property<string>("Tasktitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tasktitle");

                    b.HasKey("Id");

                    b.HasIndex("Kerdoivid");

                    b.ToTable("devops", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopscomponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("configuration");

                    b.Property<int>("Devopsid")
                        .HasColumnType("int")
                        .HasColumnName("devopsid");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Devopsid");

                    b.ToTable("devopscomponent", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopsdeliverable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acceptance")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("acceptance");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("desc");

                    b.Property<int>("Devopsid")
                        .HasColumnType("int")
                        .HasColumnName("devopsid");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("format");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Devopsid");

                    b.ToTable("devopsdeliverable", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopsdocumentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Devopsid")
                        .HasColumnType("int")
                        .HasColumnName("devopsid");

                    b.Property<bool?>("Requiredtemplate")
                        .HasColumnType("bit")
                        .HasColumnName("requiredtemplate");

                    b.Property<string>("Templatecontent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("templatecontent");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Devopsid");

                    b.ToTable("devopsdocumentation", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopsevaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Criterion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("criterion");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("desc");

                    b.Property<int>("Devopsid")
                        .HasColumnType("int")
                        .HasColumnName("devopsid");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("Devopsid");

                    b.ToTable("devopsevaluation", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopsprereq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Devopsid")
                        .HasColumnType("int")
                        .HasColumnName("devopsid");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("purpose");

                    b.Property<string>("Tool")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tool");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.HasIndex("Devopsid");

                    b.ToTable("devopsprereq", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopstask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("desc");

                    b.Property<int>("Devopsid")
                        .HasColumnType("int")
                        .HasColumnName("devopsid");

                    b.Property<double?>("Points")
                        .HasColumnType("float")
                        .HasColumnName("points");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<string>("Validation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("validation");

                    b.HasKey("Id");

                    b.HasIndex("Devopsid");

                    b.ToTable("devopstask", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopstaskimplementation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Devopstaskid")
                        .HasColumnType("int")
                        .HasColumnName("devopstaskid");

                    b.Property<string>("Implementation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("implementation");

                    b.HasKey("Id");

                    b.HasIndex("Devopstaskid");

                    b.ToTable("devopstaskimplementation", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Dokumentum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Fajl")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fajl");

                    b.Property<string>("Fajlnev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fajlnev");

                    b.Property<int>("Felhasznaloid")
                        .HasColumnType("int")
                        .HasColumnName("felhasznaloid");

                    b.Property<string>("Leiras")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("leiras");

                    b.HasKey("Id");

                    b.HasIndex("Felhasznaloid");

                    b.ToTable("dokumentum", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Felhasznalo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("Adoszam")
                        .HasColumnType("bigint")
                        .HasColumnName("adoszam");

                    b.Property<bool>("Allaskereso")
                        .HasColumnType("bit")
                        .HasColumnName("allaskereso");

                    b.Property<string>("Anyjaneve")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("anyjaneve");

                    b.Property<int?>("Cegid")
                        .HasColumnType("int")
                        .HasColumnName("cegid");

                    b.Property<bool>("Dolgozo")
                        .HasColumnType("bit")
                        .HasColumnName("dolgozo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Jelszo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("jelszo");

                    b.Property<byte[]>("Kep")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("kep");

                    b.Property<string>("Keresztnev")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("keresztnev");

                    b.Property<string>("Leetcode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("leetcode");

                    b.Property<DateTime?>("Szuldat")
                        .HasColumnType("datetime")
                        .HasColumnName("szuldat");

                    b.Property<string>("Szulhely")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("szulhely");

                    b.Property<int?>("Szulirsz")
                        .HasColumnType("int")
                        .HasColumnName("szulirsz");

                    b.Property<string>("Vezeteknev")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vezeteknev");

                    b.HasKey("Id");

                    b.ToTable("felhasznalo", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Felhasznalokompetencium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Felhasznaloid")
                        .HasColumnType("int")
                        .HasColumnName("felhasznaloid");

                    b.Property<int>("Kompetenciaid")
                        .HasColumnType("int")
                        .HasColumnName("kompetenciaid");

                    b.Property<string>("Szint")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("szint");

                    b.HasKey("Id");

                    b.HasIndex("Felhasznaloid");

                    b.HasIndex("Kompetenciaid");

                    b.ToTable("felhasznalokompetencia", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.KProgramming", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kitoltottkerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kitoltottkerdoivid");

                    b.Property<string>("Programkod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("programkod");

                    b.Property<int>("Programmingid")
                        .HasColumnType("int")
                        .HasColumnName("programmingid");

                    b.HasKey("Id");

                    b.HasIndex("Kitoltottkerdoivid");

                    b.HasIndex("Programmingid");

                    b.ToTable("k_programming", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.KProgrammingtestcase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Futasido")
                        .HasColumnType("int")
                        .HasColumnName("futasido");

                    b.Property<bool?>("Helyes")
                        .HasColumnType("bit")
                        .HasColumnName("helyes");

                    b.Property<int>("KProgrammingid")
                        .HasColumnType("int")
                        .HasColumnName("k_programmingid");

                    b.Property<bool>("Lefutott")
                        .HasColumnType("bit")
                        .HasColumnName("lefutott");

                    b.Property<double?>("Memoria")
                        .HasColumnType("float")
                        .HasColumnName("memoria");

                    b.Property<bool?>("Nemfutle")
                        .HasColumnType("bit")
                        .HasColumnName("nemfutle");

                    b.Property<int>("Programmingtestcaseid")
                        .HasColumnType("int")
                        .HasColumnName("programmingtestcaseid");

                    b.Property<string>("Stderr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stderr");

                    b.Property<string>("Stdout")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stdout");

                    b.HasKey("Id");

                    b.HasIndex("KProgrammingid");

                    b.HasIndex("Programmingtestcaseid");

                    b.ToTable("k_programmingtestcase", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.KTobbi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Algorithmid")
                        .HasColumnType("int")
                        .HasColumnName("algorithmid");

                    b.Property<int?>("Designid")
                        .HasColumnType("int")
                        .HasColumnName("designid");

                    b.Property<int?>("Devopsid")
                        .HasColumnType("int")
                        .HasColumnName("devopsid");

                    b.Property<int>("Kitoltottkerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kitoltottkerdoivid");

                    b.Property<string>("Szovegesvalasz")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("szovegesvalasz");

                    b.Property<int?>("Testingid")
                        .HasColumnType("int")
                        .HasColumnName("testingid");

                    b.HasKey("Id");

                    b.HasIndex("Algorithmid");

                    b.HasIndex("Designid");

                    b.HasIndex("Devopsid");

                    b.HasIndex("Kitoltottkerdoivid");

                    b.HasIndex("Testingid");

                    b.ToTable("k_tobbi", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kerde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Feleletvalasztos")
                        .HasColumnType("bit")
                        .HasColumnName("feleletvalasztos");

                    b.Property<int>("Kerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kerdoivid");

                    b.Property<bool?>("Kifejtos")
                        .HasColumnType("bit")
                        .HasColumnName("kifejtos");

                    b.Property<int?>("Maxpont")
                        .HasColumnType("int")
                        .HasColumnName("maxpont");

                    b.Property<string>("Programalapszoveg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("programalapszoveg");

                    b.Property<string>("Programnyelv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("programnyelv");

                    b.Property<bool?>("Programozos")
                        .HasColumnType("bit")
                        .HasColumnName("programozos");

                    b.Property<string>("Programteszteset")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("programteszteset");

                    b.Property<int?>("Sorrendkerdes")
                        .HasColumnType("int")
                        .HasColumnName("sorrendkerdes");

                    b.Property<string>("Szoveg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("szoveg");

                    b.HasKey("Id");

                    b.HasIndex("Kerdoivid");

                    b.ToTable("kerdes", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kerdoiv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Algorithm")
                        .HasColumnType("bit")
                        .HasColumnName("algorithm");

                    b.Property<int>("Allasid")
                        .HasColumnType("int")
                        .HasColumnName("allasid");

                    b.Property<bool>("Design")
                        .HasColumnType("bit")
                        .HasColumnName("design");

                    b.Property<bool>("Devops")
                        .HasColumnType("bit")
                        .HasColumnName("devops");

                    b.Property<int?>("Kitoltesperc")
                        .HasColumnType("int")
                        .HasColumnName("kitoltesperc");

                    b.Property<int>("Kor")
                        .HasColumnType("int")
                        .HasColumnName("kor");

                    b.Property<int?>("Maxpont")
                        .HasColumnType("int")
                        .HasColumnName("maxpont");

                    b.Property<string>("Nev")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nev");

                    b.Property<bool>("Programming")
                        .HasColumnType("bit")
                        .HasColumnName("programming");

                    b.Property<bool>("Testing")
                        .HasColumnType("bit")
                        .HasColumnName("testing");

                    b.HasKey("Id");

                    b.HasIndex("Allasid");

                    b.ToTable("kerdoiv", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottalla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Allasid")
                        .HasColumnType("int")
                        .HasColumnName("allasid");

                    b.Property<int>("Allaskeresoid")
                        .HasColumnType("int")
                        .HasColumnName("allaskeresoid");

                    b.Property<DateTime>("Kitolteskezdet")
                        .HasColumnType("datetime")
                        .HasColumnName("kitolteskezdet");

                    b.Property<bool?>("Kivalasztva")
                        .HasColumnType("bit")
                        .HasColumnName("kivalasztva");

                    b.HasKey("Id");

                    b.HasIndex("Allasid");

                    b.HasIndex("Allaskeresoid");

                    b.ToTable("kitoltottallas", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottkerde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Elertpont")
                        .HasColumnType("int")
                        .HasColumnName("elertpont");

                    b.Property<int>("Kerdesid")
                        .HasColumnType("int")
                        .HasColumnName("kerdesid");

                    b.Property<int>("Kitoltottkerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kitoltottkerdoivid");

                    b.Property<bool?>("Programhelyes")
                        .HasColumnType("bit")
                        .HasColumnName("programhelyes");

                    b.Property<string>("Szovegesvalasz")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("szovegesvalasz");

                    b.Property<int?>("Valasztosid")
                        .HasColumnType("int")
                        .HasColumnName("valasztosid");

                    b.HasKey("Id");

                    b.HasIndex("Kerdesid");

                    b.HasIndex("Kitoltottkerdoivid");

                    b.HasIndex("Valasztosid");

                    b.ToTable("kitoltottkerdes", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottkerdoiv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Befejezve")
                        .HasColumnType("bit")
                        .HasColumnName("befejezve");

                    b.Property<int>("Kerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kerdoivid");

                    b.Property<DateTime?>("Kitolteskezdet")
                        .HasColumnType("datetime")
                        .HasColumnName("kitolteskezdet");

                    b.Property<int>("Kitoltottallasid")
                        .HasColumnType("int")
                        .HasColumnName("kitoltottallasid");

                    b.Property<bool?>("Miajanlas")
                        .HasColumnType("bit")
                        .HasColumnName("miajanlas");

                    b.Property<int?>("Miszazalek")
                        .HasColumnType("int")
                        .HasColumnName("miszazalek");

                    b.Property<double?>("Szazalek")
                        .HasColumnType("float")
                        .HasColumnName("szazalek");

                    b.Property<bool?>("Tovabbjut")
                        .HasColumnType("bit")
                        .HasColumnName("tovabbjut");

                    b.HasKey("Id");

                    b.HasIndex("Kerdoivid");

                    b.HasIndex("Kitoltottallasid");

                    b.ToTable("kitoltottkerdoiv", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottvalasz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Elertpont")
                        .HasColumnType("int")
                        .HasColumnName("elertpont");

                    b.Property<int>("Kitoltottkerdesid")
                        .HasColumnType("int")
                        .HasColumnName("kitoltottkerdesid");

                    b.Property<string>("Szovegesvalasz")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("szovegesvalasz");

                    b.Property<int?>("Valaszid")
                        .HasColumnType("int")
                        .HasColumnName("valaszid");

                    b.HasKey("Id");

                    b.HasIndex("Kitoltottkerdesid");

                    b.HasIndex("Valaszid");

                    b.ToTable("kitoltottvalasz", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kompetencium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipus");

                    b.HasKey("Id");

                    b.ToTable("kompetencia", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Lefutottteszteset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Futasido")
                        .HasColumnType("float")
                        .HasColumnName("futasido");

                    b.Property<bool?>("Helyes")
                        .HasColumnType("bit")
                        .HasColumnName("helyes");

                    b.Property<string>("Hibakimenet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hibakimenet");

                    b.Property<string>("Kimenet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kimenet");

                    b.Property<int>("Kitoltottkerdesid")
                        .HasColumnType("int")
                        .HasColumnName("kitoltottkerdesid");

                    b.Property<int>("Tesztesetid")
                        .HasColumnType("int")
                        .HasColumnName("tesztesetid");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.HasIndex("Kitoltottkerdesid");

                    b.HasIndex("Tesztesetid");

                    b.ToTable("lefutottteszteset", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Meghivokod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cegid")
                        .HasColumnType("int")
                        .HasColumnName("cegid");

                    b.Property<DateTime?>("Ervenyesseg")
                        .HasColumnType("datetime")
                        .HasColumnName("ervenyesseg");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("kod");

                    b.HasKey("Id");

                    b.HasIndex("Cegid");

                    b.ToTable("meghivokod", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Programming", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codetemplate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codetemplate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Kerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kerdoivid");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("language");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Kerdoivid");

                    b.ToTable("programming", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Programmingtestcase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Input")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("input");

                    b.Property<string>("Output")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("output");

                    b.Property<int>("Programmingid")
                        .HasColumnType("int")
                        .HasColumnName("programmingid");

                    b.HasKey("Id");

                    b.HasIndex("Programmingid");

                    b.ToTable("programmingtestcase", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Actualresult")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("actualresult");

                    b.Property<string>("Additionalreq")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additionalreq");

                    b.Property<string>("Appurl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("appurl");

                    b.Property<string>("Browser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("browser");

                    b.Property<string>("Defaultpriority")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("defaultpriority");

                    b.Property<string>("Defaultseverity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("defaultseverity");

                    b.Property<string>("Expectedresult")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("expectedresult");

                    b.Property<int>("Kerdoivid")
                        .HasColumnType("int")
                        .HasColumnName("kerdoivid");

                    b.Property<string>("Os")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("os");

                    b.Property<bool?>("Requireattachments")
                        .HasColumnType("bit")
                        .HasColumnName("requireattachments");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resolution");

                    b.Property<string>("Stepstoreproduce")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stepstoreproduce");

                    b.Property<string>("Taskdesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("taskdesc");

                    b.Property<string>("Testingtype")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("testingtype");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Kerdoivid");

                    b.ToTable("testing", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingcase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Canbeautomated")
                        .HasColumnType("bit")
                        .HasColumnName("canbeautomated");

                    b.Property<string>("Expectedresult")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("expectedresult");

                    b.Property<int?>("Points")
                        .HasColumnType("int")
                        .HasColumnName("points");

                    b.Property<string>("Testdata")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("testdata");

                    b.Property<int>("Testingid")
                        .HasColumnType("int")
                        .HasColumnName("testingid");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Testingid");

                    b.ToTable("testingcase", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingcasestep", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Testingcaseid")
                        .HasColumnType("int")
                        .HasColumnName("testingcaseid");

                    b.Property<string>("Teststep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("teststep");

                    b.HasKey("Id");

                    b.HasIndex("Testingcaseid");

                    b.ToTable("testingcasestep", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingevaluation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Criterion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("criterion");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("desc");

                    b.Property<int>("Testingid")
                        .HasColumnType("int")
                        .HasColumnName("testingid");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("Testingid");

                    b.ToTable("testingevaluation", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingscenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("desc");

                    b.Property<string>("Prereq")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prereq");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("priority");

                    b.Property<int>("Testingid")
                        .HasColumnType("int")
                        .HasColumnName("testingid");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Testingid");

                    b.ToTable("testingscenario", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingtool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("purpose");

                    b.Property<int>("Testingid")
                        .HasColumnType("int")
                        .HasColumnName("testingid");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.HasIndex("Testingid");

                    b.ToTable("testingtool", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Teszteset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bemenet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bemenet");

                    b.Property<int>("Kerdesid")
                        .HasColumnType("int")
                        .HasColumnName("kerdesid");

                    b.Property<string>("Kimenet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kimenet");

                    b.HasKey("Id");

                    b.HasIndex("Kerdesid");

                    b.ToTable("teszteset", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Valasz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Helyes")
                        .HasColumnType("bit")
                        .HasColumnName("helyes");

                    b.Property<int>("Kerdesid")
                        .HasColumnType("int")
                        .HasColumnName("kerdesid");

                    b.Property<int?>("Pontszam")
                        .HasColumnType("int")
                        .HasColumnName("pontszam");

                    b.Property<string>("Szoveg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("szoveg");

                    b.HasKey("Id");

                    b.HasIndex("Kerdesid");

                    b.ToTable("valasz", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Vegzettseg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Felhasznaloid")
                        .HasColumnType("int")
                        .HasColumnName("felhasznaloid");

                    b.Property<string>("Hosszuleiras")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hosszuleiras");

                    b.Property<string>("Rovidleiras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rovidleiras");

                    b.HasKey("Id");

                    b.HasIndex("Felhasznaloid");

                    b.ToTable("vegzettseg", (string)null);
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Ajanla", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Alla", "Allas")
                        .WithMany("Ajanlas")
                        .HasForeignKey("Allasid")
                        .IsRequired()
                        .HasConstraintName("FK_ajanlas_allas");

                    b.HasOne("Allasinterju.Database.Models.Felhasznalo", "Allaskereso")
                        .WithMany("Ajanlas")
                        .HasForeignKey("Allaskeresoid")
                        .IsRequired()
                        .HasConstraintName("FK_ajanlas_felhasznalo");

                    b.Navigation("Allas");

                    b.Navigation("Allaskereso");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algorithm", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerdoiv", "Kerdoiv")
                        .WithMany("Algorithms")
                        .HasForeignKey("Kerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_algorithm_kerdoiv");

                    b.Navigation("Kerdoiv");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algorithmconstraint", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Algorithm", "Algorithm")
                        .WithMany("Algorithmconstraints")
                        .HasForeignKey("Algorithmid")
                        .IsRequired()
                        .HasConstraintName("FK_algorithmconstraint_algorithm");

                    b.Navigation("Algorithm");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algorithmexample", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Algorithm", "Algorithm")
                        .WithMany("Algorithmexamples")
                        .HasForeignKey("Algorithmid")
                        .IsRequired()
                        .HasConstraintName("FK_algorithmexample_algorithm");

                    b.Navigation("Algorithm");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algorithmhint", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Algorithm", "Algorithm")
                        .WithMany("Algorithmhints")
                        .HasForeignKey("Algorithmid")
                        .IsRequired()
                        .HasConstraintName("FK_algorithmhint_algorithm");

                    b.Navigation("Algorithm");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algortihmtestcase", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Algorithm", "Algorithm")
                        .WithMany("Algortihmtestcases")
                        .HasForeignKey("Algorithmid")
                        .IsRequired()
                        .HasConstraintName("FK_algortihmtestcase_algorithm");

                    b.Navigation("Algorithm");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Alla", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Ceg", "Ceg")
                        .WithMany("Allas")
                        .HasForeignKey("Cegid")
                        .IsRequired()
                        .HasConstraintName("FK_allas_ceg");

                    b.Navigation("Ceg");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Allaskapcsolattarto", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Alla", "Allas")
                        .WithMany("Allaskapcsolattartos")
                        .HasForeignKey("Allasid")
                        .IsRequired()
                        .HasConstraintName("FK_allaskapcsolattarto_allas");

                    b.HasOne("Allasinterju.Database.Models.Felhasznalo", "Kapcsolattarto")
                        .WithMany("Allaskapcsolattartos")
                        .HasForeignKey("Kapcsolattartoid")
                        .IsRequired()
                        .HasConstraintName("FK_allaskapcsolattarto_felhasznalo");

                    b.Navigation("Allas");

                    b.Navigation("Kapcsolattarto");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Allaskerdoiv", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerde", "Kerdes")
                        .WithMany("Allaskerdoivs")
                        .HasForeignKey("Kerdesid")
                        .IsRequired()
                        .HasConstraintName("FK_allaskerdoiv_kerdes");

                    b.HasOne("Allasinterju.Database.Models.Kerdoiv", "Kerdoiv")
                        .WithMany("Allaskerdoivs")
                        .HasForeignKey("Kerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_allaskerdoiv_kerdoiv");

                    b.Navigation("Kerdes");

                    b.Navigation("Kerdoiv");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Allaskompetencium", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Alla", "Allas")
                        .WithMany("Allaskompetencia")
                        .HasForeignKey("Allasid")
                        .IsRequired()
                        .HasConstraintName("FK_allaskompetencia_allas");

                    b.HasOne("Allasinterju.Database.Models.Kompetencium", "Kompetencia")
                        .WithMany("Allaskompetencia")
                        .HasForeignKey("Kompetenciaid")
                        .IsRequired()
                        .HasConstraintName("FK_allaskompetencia_kompetencia");

                    b.Navigation("Allas");

                    b.Navigation("Kompetencia");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Allasvizsgalo", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Alla", "Allas")
                        .WithMany("Allasvizsgalos")
                        .HasForeignKey("Allasid")
                        .IsRequired()
                        .HasConstraintName("FK_allasvizsgalo_allas");

                    b.HasOne("Allasinterju.Database.Models.Felhasznalo", "Felhasznalo")
                        .WithMany("Allasvizsgalos")
                        .HasForeignKey("Felhasznaloid")
                        .IsRequired()
                        .HasConstraintName("FK_allasvizsgalo_felhasznalo");

                    b.Navigation("Allas");

                    b.Navigation("Felhasznalo");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Design", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerdoiv", "Kerdoiv")
                        .WithMany("Designs")
                        .HasForeignKey("Kerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_design_kerdoiv");

                    b.Navigation("Kerdoiv");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Designevaluation", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Design", "Design")
                        .WithMany("Designevaluations")
                        .HasForeignKey("Designid")
                        .IsRequired()
                        .HasConstraintName("FK_designevaluation_design");

                    b.Navigation("Design");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Designreference", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Design", "Design")
                        .WithMany("Designreferences")
                        .HasForeignKey("Designid")
                        .IsRequired()
                        .HasConstraintName("FK_designreference_design");

                    b.Navigation("Design");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Designreq", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Design", "Design")
                        .WithMany("Designreqs")
                        .HasForeignKey("Designid")
                        .IsRequired()
                        .HasConstraintName("FK_designreq_design");

                    b.Navigation("Design");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devop", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerdoiv", "Kerdoiv")
                        .WithMany("DevopsNavigation")
                        .HasForeignKey("Kerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_devops_kerdoiv");

                    b.Navigation("Kerdoiv");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopscomponent", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Devop", "Devops")
                        .WithMany("Devopscomponents")
                        .HasForeignKey("Devopsid")
                        .IsRequired()
                        .HasConstraintName("FK_devopscomponent_devops");

                    b.Navigation("Devops");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopsdeliverable", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Devop", "Devops")
                        .WithMany("Devopsdeliverables")
                        .HasForeignKey("Devopsid")
                        .IsRequired()
                        .HasConstraintName("FK_devopsdeliverable_devops");

                    b.Navigation("Devops");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopsdocumentation", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Devop", "Devops")
                        .WithMany("Devopsdocumentations")
                        .HasForeignKey("Devopsid")
                        .IsRequired()
                        .HasConstraintName("FK_devopsdocumentation_devops");

                    b.Navigation("Devops");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopsevaluation", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Devop", "Devops")
                        .WithMany("Devopsevaluations")
                        .HasForeignKey("Devopsid")
                        .IsRequired()
                        .HasConstraintName("FK_devopsevaluation_devops");

                    b.Navigation("Devops");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopsprereq", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Devop", "Devops")
                        .WithMany("Devopsprereqs")
                        .HasForeignKey("Devopsid")
                        .IsRequired()
                        .HasConstraintName("FK_devopsprereq_devops");

                    b.Navigation("Devops");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopstask", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Devop", "Devops")
                        .WithMany("Devopstasks")
                        .HasForeignKey("Devopsid")
                        .IsRequired()
                        .HasConstraintName("FK_devopstask_devops");

                    b.Navigation("Devops");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopstaskimplementation", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Devopstask", "Devopstask")
                        .WithMany("Devopstaskimplementations")
                        .HasForeignKey("Devopstaskid")
                        .IsRequired()
                        .HasConstraintName("FK_devopstaskimplementation_devopstask");

                    b.Navigation("Devopstask");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Dokumentum", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Felhasznalo", "Felhasznalo")
                        .WithMany("Dokumenta")
                        .HasForeignKey("Felhasznaloid")
                        .IsRequired()
                        .HasConstraintName("FK_dokumentum_felhasznalo");

                    b.Navigation("Felhasznalo");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Felhasznalokompetencium", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Felhasznalo", "Felhasznalo")
                        .WithMany("Felhasznalokompetencia")
                        .HasForeignKey("Felhasznaloid")
                        .IsRequired()
                        .HasConstraintName("FK_felhasznalokompetencia_felhasznalo");

                    b.HasOne("Allasinterju.Database.Models.Kompetencium", "Kompetencia")
                        .WithMany("Felhasznalokompetencia")
                        .HasForeignKey("Kompetenciaid")
                        .IsRequired()
                        .HasConstraintName("FK_felhasznalokompetencia_kompetencia");

                    b.Navigation("Felhasznalo");

                    b.Navigation("Kompetencia");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.KProgramming", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kitoltottkerdoiv", "Kitoltottkerdoiv")
                        .WithMany("KProgrammings")
                        .HasForeignKey("Kitoltottkerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_k_programming_kitoltottkerdoiv");

                    b.HasOne("Allasinterju.Database.Models.Programming", "Programming")
                        .WithMany("KProgrammings")
                        .HasForeignKey("Programmingid")
                        .IsRequired()
                        .HasConstraintName("FK_k_programming_programming");

                    b.Navigation("Kitoltottkerdoiv");

                    b.Navigation("Programming");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.KProgrammingtestcase", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.KProgramming", "KProgramming")
                        .WithMany("KProgrammingtestcases")
                        .HasForeignKey("KProgrammingid")
                        .IsRequired()
                        .HasConstraintName("FK_k_programmingtestcase_k_programming");

                    b.HasOne("Allasinterju.Database.Models.Programmingtestcase", "Programmingtestcase")
                        .WithMany("KProgrammingtestcases")
                        .HasForeignKey("Programmingtestcaseid")
                        .IsRequired()
                        .HasConstraintName("FK_k_programmingtestcase_programmingtestcase");

                    b.Navigation("KProgramming");

                    b.Navigation("Programmingtestcase");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.KTobbi", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Algorithm", "Algorithm")
                        .WithMany("KTobbis")
                        .HasForeignKey("Algorithmid")
                        .HasConstraintName("FK_k_tobbi_algorithm");

                    b.HasOne("Allasinterju.Database.Models.Design", "Design")
                        .WithMany("KTobbis")
                        .HasForeignKey("Designid")
                        .HasConstraintName("FK_k_tobbi_design_1");

                    b.HasOne("Allasinterju.Database.Models.Devop", "Devops")
                        .WithMany("KTobbis")
                        .HasForeignKey("Devopsid")
                        .HasConstraintName("FK_k_tobbi_devops_2");

                    b.HasOne("Allasinterju.Database.Models.Kitoltottkerdoiv", "Kitoltottkerdoiv")
                        .WithMany("KTobbis")
                        .HasForeignKey("Kitoltottkerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_k_tobbi_kitoltottkerdoiv");

                    b.HasOne("Allasinterju.Database.Models.Testing", "Testing")
                        .WithMany("KTobbis")
                        .HasForeignKey("Testingid")
                        .HasConstraintName("FK_k_tobbi_testing_3");

                    b.Navigation("Algorithm");

                    b.Navigation("Design");

                    b.Navigation("Devops");

                    b.Navigation("Kitoltottkerdoiv");

                    b.Navigation("Testing");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kerde", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerdoiv", "Kerdoiv")
                        .WithMany("Kerdes")
                        .HasForeignKey("Kerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_kerdes_kerdoiv");

                    b.Navigation("Kerdoiv");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kerdoiv", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Alla", "Allas")
                        .WithMany("Kerdoivs")
                        .HasForeignKey("Allasid")
                        .IsRequired()
                        .HasConstraintName("FK_kerdoiv_allas");

                    b.Navigation("Allas");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottalla", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Alla", "Allas")
                        .WithMany("Kitoltottallas")
                        .HasForeignKey("Allasid")
                        .IsRequired()
                        .HasConstraintName("FK_kitoltottallas_allas");

                    b.HasOne("Allasinterju.Database.Models.Felhasznalo", "Allaskereso")
                        .WithMany("Kitoltottallas")
                        .HasForeignKey("Allaskeresoid")
                        .IsRequired()
                        .HasConstraintName("FK_kitoltottallas_felhasznalo");

                    b.Navigation("Allas");

                    b.Navigation("Allaskereso");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottkerde", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerde", "Kerdes")
                        .WithMany("Kitoltottkerdes")
                        .HasForeignKey("Kerdesid")
                        .IsRequired()
                        .HasConstraintName("FK_kitoltottkerdes_kerdes");

                    b.HasOne("Allasinterju.Database.Models.Kitoltottkerdoiv", "Kitoltottkerdoiv")
                        .WithMany("Kitoltottkerdes")
                        .HasForeignKey("Kitoltottkerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_kitoltottkerdes_kitoltottallas");

                    b.HasOne("Allasinterju.Database.Models.Valasz", "Valasztos")
                        .WithMany("Kitoltottkerdes")
                        .HasForeignKey("Valasztosid")
                        .HasConstraintName("FK_kitoltottkerdes_valasz");

                    b.Navigation("Kerdes");

                    b.Navigation("Kitoltottkerdoiv");

                    b.Navigation("Valasztos");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottkerdoiv", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerdoiv", "Kerdoiv")
                        .WithMany("Kitoltottkerdoivs")
                        .HasForeignKey("Kerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_kitoltottkerdoiv_kerdoiv");

                    b.HasOne("Allasinterju.Database.Models.Kitoltottalla", "Kitoltottallas")
                        .WithMany("Kitoltottkerdoivs")
                        .HasForeignKey("Kitoltottallasid")
                        .IsRequired()
                        .HasConstraintName("FK_kitoltottkerdoiv_kitoltottallas");

                    b.Navigation("Kerdoiv");

                    b.Navigation("Kitoltottallas");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottvalasz", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kitoltottkerde", "Kitoltottkerdes")
                        .WithMany("Kitoltottvalaszs")
                        .HasForeignKey("Kitoltottkerdesid")
                        .IsRequired()
                        .HasConstraintName("FK_kitoltottvalasz_kitoltottkerdes");

                    b.HasOne("Allasinterju.Database.Models.Valasz", "Valasz")
                        .WithMany("Kitoltottvalaszs")
                        .HasForeignKey("Valaszid")
                        .HasConstraintName("FK_kitoltottvalasz_valasz");

                    b.Navigation("Kitoltottkerdes");

                    b.Navigation("Valasz");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Lefutottteszteset", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kitoltottkerde", "Kitoltottkerdes")
                        .WithMany("Lefutotttesztesets")
                        .HasForeignKey("Kitoltottkerdesid")
                        .IsRequired()
                        .HasConstraintName("FK_lefutottteszteset_kitoltottkerdes");

                    b.HasOne("Allasinterju.Database.Models.Teszteset", "Teszteset")
                        .WithMany("Lefutotttesztesets")
                        .HasForeignKey("Tesztesetid")
                        .IsRequired()
                        .HasConstraintName("FK_lefutottteszteset_teszteset");

                    b.Navigation("Kitoltottkerdes");

                    b.Navigation("Teszteset");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Meghivokod", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Ceg", "Ceg")
                        .WithMany("Meghivokods")
                        .HasForeignKey("Cegid")
                        .IsRequired()
                        .HasConstraintName("FK_meghivokod_ceg");

                    b.Navigation("Ceg");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Programming", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerdoiv", "Kerdoiv")
                        .WithMany("Programmings")
                        .HasForeignKey("Kerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_programming_kerdoiv");

                    b.Navigation("Kerdoiv");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Programmingtestcase", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Programming", "Programming")
                        .WithMany("Programmingtestcases")
                        .HasForeignKey("Programmingid")
                        .IsRequired()
                        .HasConstraintName("FK_programmingtestcase_programming");

                    b.Navigation("Programming");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testing", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerdoiv", "Kerdoiv")
                        .WithMany("Testings")
                        .HasForeignKey("Kerdoivid")
                        .IsRequired()
                        .HasConstraintName("FK_testing_kerdoiv");

                    b.Navigation("Kerdoiv");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingcase", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Testing", "Testing")
                        .WithMany("Testingcases")
                        .HasForeignKey("Testingid")
                        .IsRequired()
                        .HasConstraintName("FK_testingcase_testing");

                    b.Navigation("Testing");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingcasestep", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Testingcase", "Testingcase")
                        .WithMany("Testingcasesteps")
                        .HasForeignKey("Testingcaseid")
                        .IsRequired()
                        .HasConstraintName("FK_testingcasestep_testingcase");

                    b.Navigation("Testingcase");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingevaluation", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Testing", "Testing")
                        .WithMany("Testingevaluations")
                        .HasForeignKey("Testingid")
                        .IsRequired()
                        .HasConstraintName("FK_testingevaluation_testing");

                    b.Navigation("Testing");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingscenario", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Testing", "Testing")
                        .WithMany("Testingscenarios")
                        .HasForeignKey("Testingid")
                        .IsRequired()
                        .HasConstraintName("FK_testingscenario_testing");

                    b.Navigation("Testing");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingtool", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Testing", "Testing")
                        .WithMany("Testingtools")
                        .HasForeignKey("Testingid")
                        .IsRequired()
                        .HasConstraintName("FK_testingtool_testing");

                    b.Navigation("Testing");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Teszteset", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerde", "Kerdes")
                        .WithMany("Tesztesets")
                        .HasForeignKey("Kerdesid")
                        .IsRequired()
                        .HasConstraintName("FK_teszteset_kerdes");

                    b.Navigation("Kerdes");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Valasz", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Kerde", "Kerdes")
                        .WithMany("Valaszs")
                        .HasForeignKey("Kerdesid")
                        .IsRequired()
                        .HasConstraintName("FK_valasz_kerdes");

                    b.Navigation("Kerdes");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Vegzettseg", b =>
                {
                    b.HasOne("Allasinterju.Database.Models.Felhasznalo", "Felhasznalo")
                        .WithMany("Vegzettsegs")
                        .HasForeignKey("Felhasznaloid")
                        .IsRequired()
                        .HasConstraintName("FK_vegzettseg_felhasznalo");

                    b.Navigation("Felhasznalo");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Algorithm", b =>
                {
                    b.Navigation("Algorithmconstraints");

                    b.Navigation("Algorithmexamples");

                    b.Navigation("Algorithmhints");

                    b.Navigation("Algortihmtestcases");

                    b.Navigation("KTobbis");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Alla", b =>
                {
                    b.Navigation("Ajanlas");

                    b.Navigation("Allaskapcsolattartos");

                    b.Navigation("Allaskompetencia");

                    b.Navigation("Allasvizsgalos");

                    b.Navigation("Kerdoivs");

                    b.Navigation("Kitoltottallas");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Ceg", b =>
                {
                    b.Navigation("Allas");

                    b.Navigation("Meghivokods");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Design", b =>
                {
                    b.Navigation("Designevaluations");

                    b.Navigation("Designreferences");

                    b.Navigation("Designreqs");

                    b.Navigation("KTobbis");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devop", b =>
                {
                    b.Navigation("Devopscomponents");

                    b.Navigation("Devopsdeliverables");

                    b.Navigation("Devopsdocumentations");

                    b.Navigation("Devopsevaluations");

                    b.Navigation("Devopsprereqs");

                    b.Navigation("Devopstasks");

                    b.Navigation("KTobbis");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Devopstask", b =>
                {
                    b.Navigation("Devopstaskimplementations");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Felhasznalo", b =>
                {
                    b.Navigation("Ajanlas");

                    b.Navigation("Allaskapcsolattartos");

                    b.Navigation("Allasvizsgalos");

                    b.Navigation("Dokumenta");

                    b.Navigation("Felhasznalokompetencia");

                    b.Navigation("Kitoltottallas");

                    b.Navigation("Vegzettsegs");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.KProgramming", b =>
                {
                    b.Navigation("KProgrammingtestcases");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kerde", b =>
                {
                    b.Navigation("Allaskerdoivs");

                    b.Navigation("Kitoltottkerdes");

                    b.Navigation("Tesztesets");

                    b.Navigation("Valaszs");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kerdoiv", b =>
                {
                    b.Navigation("Algorithms");

                    b.Navigation("Allaskerdoivs");

                    b.Navigation("Designs");

                    b.Navigation("DevopsNavigation");

                    b.Navigation("Kerdes");

                    b.Navigation("Kitoltottkerdoivs");

                    b.Navigation("Programmings");

                    b.Navigation("Testings");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottalla", b =>
                {
                    b.Navigation("Kitoltottkerdoivs");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottkerde", b =>
                {
                    b.Navigation("Kitoltottvalaszs");

                    b.Navigation("Lefutotttesztesets");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kitoltottkerdoiv", b =>
                {
                    b.Navigation("KProgrammings");

                    b.Navigation("KTobbis");

                    b.Navigation("Kitoltottkerdes");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Kompetencium", b =>
                {
                    b.Navigation("Allaskompetencia");

                    b.Navigation("Felhasznalokompetencia");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Programming", b =>
                {
                    b.Navigation("KProgrammings");

                    b.Navigation("Programmingtestcases");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Programmingtestcase", b =>
                {
                    b.Navigation("KProgrammingtestcases");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testing", b =>
                {
                    b.Navigation("KTobbis");

                    b.Navigation("Testingcases");

                    b.Navigation("Testingevaluations");

                    b.Navigation("Testingscenarios");

                    b.Navigation("Testingtools");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Testingcase", b =>
                {
                    b.Navigation("Testingcasesteps");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Teszteset", b =>
                {
                    b.Navigation("Lefutotttesztesets");
                });

            modelBuilder.Entity("Allasinterju.Database.Models.Valasz", b =>
                {
                    b.Navigation("Kitoltottkerdes");

                    b.Navigation("Kitoltottvalaszs");
                });
#pragma warning restore 612, 618
        }
    }
}
